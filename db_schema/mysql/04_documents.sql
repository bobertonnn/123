-- 04_documents.sql

CREATE TABLE IF NOT EXISTS documents (
    id VARCHAR(255) PRIMARY KEY,                           -- Typically a UUID generated by the application or Firebase UID if applicable to context
    user_id VARCHAR(255) NOT NULL,                         -- Foreign key to users table
    name VARCHAR(255) NOT NULL,
    status ENUM('Pending', 'Signed', 'Completed', 'Rejected', 'Uploaded') NOT NULL DEFAULT 'Uploaded',
    participants TEXT,                                     -- Stores a JSON array of participant names or IDs as strings
    last_modified DATE NOT NULL,
    thumbnail_url VARCHAR(2048),                           -- URL to a thumbnail image
    data_url LONGTEXT,                                     -- Base64 encoded PDF data or a URL to the PDF file
    summary TEXT,                                          -- AI-generated summary of the document
    stamped_signature_url VARCHAR(2048),                   -- URL to a stamped signature image, if applicable
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_documents_user_id ON documents(user_id);
CREATE INDEX IF NOT EXISTS idx_documents_status ON documents(status);
CREATE INDEX IF NOT EXISTS idx_documents_last_modified ON documents(last_modified);

-- Consider a full-text index on 'name' and 'summary' if you plan to search these fields frequently.
-- CREATE FULLTEXT INDEX IF NOT EXISTS idx_documents_ft_name_summary ON documents(name, summary);

-- Note on 'participants':
-- Storing as TEXT (e.g., JSON string like '["Alice", "Bob"]') is simple for now.
-- For more complex querying or relational integrity, a separate 'document_participants' junction table would be better:
-- CREATE TABLE IF NOT EXISTS document_participants (
--     document_id VARCHAR(255) NOT NULL,
--     participant_identifier VARCHAR(255) NOT NULL, -- Could be an email, user_id, or just a name
--     PRIMARY KEY (document_id, participant_identifier),
--     FOREIGN KEY (document_id) REFERENCES documents(id) ON DELETE CASCADE
--     -- Optionally, if participants are also users:
--     -- FOREIGN KEY (participant_identifier) REFERENCES users(id) ON DELETE SET NULL
-- );
