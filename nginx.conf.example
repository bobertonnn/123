
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com; # Замените на ваш домен

    # Перенаправление HTTP на HTTPS (если SSL настроен, Certbot обычно делает это автоматически)
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # Для Let's Encrypt верификации
    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html; # Или другой путь, если Certbot использует его
    }
}

server {
    listen 443 ssl http2; # Для HTTPS
    listen [::]:443 ssl http2; # Для HTTPS
    server_name your-domain.com www.your-domain.com; # Замените на ваш домен

    # SSL сертификаты (Certbot обычно настраивает это автоматически)
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Путь к статическим файлам Next.js (опционально, если Next.js сам их отдает)
    # location /_next/static {
    #     alias /path/to/your-project-directory/.next/static; # Замените на ваш путь
    #     expires 1y;
    #     access_log off;
    #     add_header Cache-Control "public";
    # }

    # Путь к публичным файлам
    # location /static {
    #     alias /path/to/your-project-directory/public; # Замените на ваш путь
    #     expires 1y;
    #     access_log off;
    #     add_header Cache-Control "public";
    # }

    location / {
        proxy_pass http://localhost:3000; # Порт вашего Next.js приложения
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Запрет листинга директорий (дополнительная мера)
        autoindex off;
    }

    # Настройки безопасности
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://placehold.co; font-src 'self'; connect-src 'self' https://*.googleapis.com;" always; # Пример CSP, требует тщательной настройки
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Увеличение максимального размера тела запроса (если загружаете большие файлы через Nginx)
    client_max_body_size 100M;

    # Скрытие версии Nginx
    server_tokens off;

    # Логи
    access_log /var/log/nginx/your-domain.com.access.log;
    error_log /var/log/nginx/your-domain.com.error.log;
}
